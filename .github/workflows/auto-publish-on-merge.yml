name: Auto Publish on Merge

on:
  push:
    branches: [ main ]

concurrency:
  group: auto-publish-${{ github.ref }}
  cancel-in-progress: false

jobs:
  bump_and_tag:
    # Skip if this push is already the release bump commit or a tag push
    if: >-
      ${{ !startsWith(github.ref, 'refs/tags/') && !contains(github.event.head_commit.message, '[release-bump]') }}
    runs-on: ubuntu-latest
    environment: npm-publish
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version: 20.x
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Determine bump type from PR labels/title (default patch)
        id: bump
        env:
          GH_TOKEN: ${{ github.token }}
          COMMIT_MSG: ${{ github.event.head_commit.message }}
        run: |
          set -euo pipefail
          BUMP="patch"
          PR_NUM=$(printf "%s" "$COMMIT_MSG" | sed -n 's/.*(#\([0-9]\+\)).*/\1/p') || true
          if [ -n "${PR_NUM:-}" ]; then
            info=$(gh pr view "$PR_NUM" --json labels,title --jq '{labels: [.labels[].name], title: .title}' || echo '{}')
            title=$(echo "$info" | jq -r '.title // ""')
            labels=$(echo "$info" | jq -r '.labels // [] | join(",")')
            shopt -s nocasematch || true
            if echo "$labels" | grep -Eqi '(release[:/ ]|semver[:/ ]|type[:/ ])?\s*major|\bmajor\b'; then
              BUMP="major"
            elif echo "$labels" | grep -Eqi '(release[:/ ]|semver[:/ ]|type[:/ ])?\s*minor|\bminor\b'; then
              BUMP="minor"
            elif printf "%s" "$title" | grep -Eq '^feat(\(|:|!)'; then
              BUMP="minor"
            fi
            shopt -u nocasematch || true
          fi
          echo "bump=$BUMP" >> "$GITHUB_OUTPUT"
          echo "Selected bump: $BUMP (PR #${PR_NUM:-n/a})"

      - name: Configure git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Install deps
        run: npm ci

      - name: Generate OpenAPI types (optional)
        if: ${{ vars.FLUXOMAIL_OPENAPI != '' }}
        env:
          FLUXOMAIL_OPENAPI: ${{ vars.FLUXOMAIL_OPENAPI }}
        run: npm run codegen:openapi

      - name: Run tests
        run: npm test

      - name: Verify package contents
        run: npm run ci:pack-check

      - name: Bump version and create tag
        env:
          BUMP: ${{ steps.bump.outputs.bump }}
        run: |
          set -euo pipefail
          npm version "$BUMP" -m "chore(main): release %s [release-bump]"

      - name: Compute new version
        id: ver
        run: |
          node -e "console.log('version=' + require('./package.json').version)" >> "$GITHUB_OUTPUT"

      - name: Preflight: NPM token present
        run: |
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "NPM_TOKEN secret is not configured for environment 'npm-publish'." >&2
            exit 1
          fi

      - name: Who am I (npm)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm whoami || true

      - name: Check if version already on npm
        id: exists
        run: |
          set -euo pipefail
          V="${{ steps.ver.outputs.version }}"
          echo "Checking npm for version $V"
          if npm view @fluxomail/sdk versions --json | jq -e ". | index(\"$V\")" >/dev/null; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
            echo "Version $V already published; skipping publish"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish to npm with provenance
        if: steps.exists.outputs.exists == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --provenance --access public

      - name: Push commit and tags
        run: |
          set -euo pipefail
          # Push tag; commit push may be blocked by branch protection and is non-fatal
          git push origin --tags || true
          git push origin HEAD:main --follow-tags || true

      - name: Summary
        run: |
          echo "Auto-release bump completed. If commit push was blocked by branch protection, the tag was still pushed and publish executed in this job."
