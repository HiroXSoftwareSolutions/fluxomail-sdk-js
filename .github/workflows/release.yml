name: Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref to publish (e.g., refs/tags/v0.3.3)'
        required: false
        default: ''

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref != '' && inputs.ref || (github.event_name == 'release' && github.event.release.tag_name || github.ref) }}
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version: 20.x
          cache: npm
          registry-url: 'https://registry.npmjs.org'
      - name: Install jq (used for version existence check)
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Install deps
        run: npm ci
      - name: Generate OpenAPI types (optional)
        env:
          FLUXOMAIL_OPENAPI: ${{ vars.FLUXOMAIL_OPENAPI }}
        if: ${{ env.FLUXOMAIL_OPENAPI != '' }}
        run: npm run codegen:openapi
      - name: Run tests
        run: npm test
      - name: Verify package contents
        run: npm run ci:pack-check
      - name: Preflight: NPM token present
        run: |
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "NPM_TOKEN secret is not configured."
            echo "Create an npm Automation token and add it as a repository secret named NPM_TOKEN."
            exit 1
          fi
      - name: Who am I (npm)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm whoami || true
      - name: Compute version
        id: ver
        run: echo "version=$(node -p \"require('./package.json').version\")" >> "$GITHUB_OUTPUT"
      - name: Check if version already on npm
        id: exists
        run: |
          set -euo pipefail
          V="${{ steps.ver.outputs.version }}"
          echo "Checking npm for version $V"
          if npm view @fluxomail/sdk versions --json | jq -e ". | index(\"$V\")" >/dev/null; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
            echo "Version $V already published; skipping publish"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Publish to npm with provenance
        if: steps.exists.outputs.exists == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --provenance --access public
