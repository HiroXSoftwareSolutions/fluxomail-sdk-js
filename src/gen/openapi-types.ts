/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v1/emails/send": {
    /** Send an email */
    post: {
      parameters: {
        header?: {
          "Fluxomail-Version"?: components["parameters"]["FluxomailVersion"];
        };
      };
      requestBody: {
        content: {
          "application/json": {
            to: string | string[];
            subject: string;
            /** @description Plain text or HTML; field names may vary by backend */
            content: string;
            htmlContent?: string;
            policyKey?: string;
            cc?: string | string[];
            bcc?: string | string[];
            attachments?: {
                filename: string;
                contentBase64: string;
                contentType?: string;
              }[];
          };
        };
      };
      responses: {
        /** @description Send accepted */
        200: {
          headers: {
            "Fluxomail-Request-Id"?: string;
            "Idempotency-Key"?: string;
          };
          content: {
            "application/json": {
              sendId?: string;
              status?: string;
            };
          };
        };
        401: components["responses"]["Unauthorized"];
        429: components["responses"]["RateLimited"];
      };
    };
  };
  "/api/v1/sends/{id}": {
    /** Get send status/timeline */
    get: {
      parameters: {
        header?: {
          "Fluxomail-Version"?: components["parameters"]["FluxomailVersion"];
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Timeline */
        200: {
          headers: {
            "Fluxomail-Request-Id"?: string;
          };
          content: {
            "application/json": {
              [key: string]: unknown;
            };
          };
        };
        401: components["responses"]["Unauthorized"];
        /** @description Not found */
        404: {
          content: never;
        };
        429: components["responses"]["RateLimited"];
      };
    };
  };
  "/api/v1/events": {
    /** List events */
    get: {
      parameters: {
        query?: {
          types?: string[];
          limit?: number;
          /** @description Opaque cursor or ms epoch for backward paging */
          cursor?: string;
          /** @description ISO timestamp or ms epoch for lower bound */
          since?: string;
        };
        header?: {
          "Fluxomail-Version"?: components["parameters"]["FluxomailVersion"];
        };
      };
      responses: {
        /** @description Event page */
        200: {
          headers: {
            "Fluxomail-Request-Id"?: string;
            "X-RateLimit-Limit"?: string;
            "X-RateLimit-Remaining"?: string;
            "X-RateLimit-Reset"?: string;
          };
          content: {
            "application/json": components["schemas"]["ListEventsResponse"];
          };
        };
        401: components["responses"]["Unauthorized"];
        /** @description Plan required (Events API not enabled) */
        402: {
          content: never;
        };
        429: components["responses"]["RateLimited"];
      };
    };
  };
  "/api/v1/events/stream": {
    /**
     * Realtime event stream (SSE)
     * @description Server-Sent Events stream of event envelopes.
     * Browser clients may pass `token` as a query parameter instead of Authorization header.
     */
    get: {
      parameters: {
        query?: {
          types?: string[];
          since?: string;
          /** @description Shortâ€‘lived browser token (alternative to Authorization) */
          token?: string;
        };
        header?: {
          "Fluxomail-Version"?: components["parameters"]["FluxomailVersion"];
        };
      };
      responses: {
        /** @description text/event-stream payload */
        200: {
          headers: {
            "Fluxomail-Request-Id"?: string;
            /** @example text/event-stream; charset=utf-8 */
            "Content-Type"?: string;
          };
          content: {
            "text/event-stream": string;
          };
        };
        401: components["responses"]["Unauthorized"];
        /** @description Plan required (Events API not enabled) */
        402: {
          content: never;
        };
        429: components["responses"]["RateLimited"];
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    EventEnvelope: {
      id: string;
      /** @example email.delivered */
      type: string;
      /** Format: date-time */
      created: string;
      data: {
        [key: string]: unknown;
      };
    };
    ListEventsResponse: {
      events: components["schemas"]["EventEnvelope"][];
      nextCursor?: string | null;
    };
  };
  responses: {
    /** @description Invalid or missing API key */
    Unauthorized: {
      content: {
        "application/json": {
          code?: string;
          message?: string;
        };
      };
    };
    /** @description Rate limit exceeded */
    RateLimited: {
      headers: {
        /** @description Seconds to wait before retry */
        "Retry-After"?: string;
        "X-RateLimit-Limit"?: string;
        "X-RateLimit-Remaining"?: string;
        "X-RateLimit-Reset"?: string;
      };
      content: {
        "application/json": {
          code?: string;
          message?: string;
        };
      };
    };
  };
  parameters: {
    /** @description Date-based version pin, e.g., 2025-09-01. */
    FluxomailVersion?: string;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
